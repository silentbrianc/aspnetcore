@page
@model Microsoft.AspNetCore.Identity.UI.V4.Pages.Account.Manage.Internal.EnableAuthenticatorModel
@{
    ViewData["Title"] = "Configure authenticator app";
    ViewData["ActivePage"] = ManageNavPages.TwoFactorAuthentication;
}

<partial name="_StatusMessage" for="StatusMessage" />
<h3>@ViewData["Title"]</h3>
<div>
    <p>To use an authenticator app go through the following steps:</p>
    <ol class="list">
        <li>
            <p>
                Download a two-factor authenticator app like Microsoft Authenticator for
                <a href="https://go.microsoft.com/fwlink/?Linkid=825072">Android</a> and
                <a href="https://go.microsoft.com/fwlink/?Linkid=825073">iOS</a> or
                Google Authenticator for
                <a href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&amp;hl=en">Android</a> and
                <a href="https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8">iOS</a>.
            </p>
        </li>
        <li>
            @if(Model.DisplaySecureCode)
            {
            <div id="secureQRDiv">
                <div>Scan this Secure QR Code.  It expires in 5 minutes and can only be used once, otherwise you will have to reload this page to generate a new key and try again.</div>
                <div id="qrCode"></div>
                <div id="qrCodeData" data-url="@Model.AuthenticatorUri"></div>
                <br />
                <form id="show-unsecure" method="post">
                    <input type="hidden" name="formName" value="formShowUnsecure" />
                    <button type="submit" class="btn btn-primary">Show Unsecure QR Code instead</button>
                </form>
            </div>
            }
            else
            {
            <div id="unsecureQRDiv">
                <div>Scan the QR Code or enter this key <kbd>@Model.SharedKey</kbd> into your two factor authenticator app. Spaces and casing do not matter.</div>
                <div>Protect this key and QR Code from observation and photographic or video capture, and do not save, share, or send them in any form to prevent immediate or future compromise of your two factor key.</div>
                <div id="qrCode"></div>
                <div id="qrCodeData" data-url="@Model.AuthenticatorUri"></div>
            </div>
            }
            <br />
        </li>
        <li>
            <p>
                Once you have scanned the QR code or input the key above, your two factor authentication app will provide you
                with a unique code. Enter the code in the confirmation box below.
            </p>
            <div class="row">
                <div class="col-md-6">
                    <form id="send-code" method="post">
                        <div class="form-group">
                            <label asp-for="Input.Code" class="control-label">Verification Code</label>
                            <input asp-for="Input.Code" class="form-control" autocomplete="off" />
                            <span asp-validation-for="Input.Code" class="text-danger"></span>
                        </div>
                        <button type="submit" class="btn btn-primary">Verify</button>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    </form>
                </div>
            </div>
        </li>
    </ol>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <!-- Uncomment the below two script lines if you are enabling QR code support per
        "Enable QR code generation for TOTP authenticator apps in ASP.NET Core" on learn.microsoft.com
        The string length is long for a QR code so a pixel width and height of 250 or more is recommended in qr.js

    -->
    <script type="text/javascript" src="~/lib/qrcode.js"></script>
    <script type="text/javascript" src="~/js/qr.js"></script>
}
